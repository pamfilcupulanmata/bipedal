%% COM
feet_distance = 5;
right_leg_ref_to_COM = [0 ; -feet_distance/2 ; 0]; % in the XY plane
left_leg_ref_to_COM = [0 ; feet_distance/2 ; 0]; % in the XY plane

concat = [];

for i=1:6
    if i~=1 && i~=5
        concat = [concat ; smiData.Solid(i).CoM];
    end
end

CoM_location = mean(concat,1);

%% BODY
body_sizes = struct('body_length_with_head', 27.85, ...
                    'head_radius', 3.25, ...
                    'body_width', 12, ...
                    'body_length', 18, ...
                    'body_length_to_middle_of_jointing', 14.5, ...
                    'body_depth', 4,...
                    'radius_of_jointing_circle_to_hip', 0.4);
%% LEG - each leg is symetric to eachother
sheen_sizes = struct('sheen_length_with_jointing_to_ankle', 12.5, ...
                     'sheen_length', 11, ...
                     'radius_of_jointing_circle_to_ankle', 0.75, ...
                     'radius_of_jointing_circle_to_knee', 0.25, ...
                     'length_of_jointing_area_to_knee', 2);

hip_sizes = struct('length', 12, ...
                   'length_of_jointing_area_to_knee', 2, ...
                   'radius_of_jointing_circle_to_knee', 0.25, ...
                   'radius_of_jointing_circle_to_body', 0.4, ...
                   'offset_body_jointing_to_center_of_circle', 0.5);

ankle_sizes = struct('length', 6, ...
                     'width', 4, ...
                     'sole_depth', 0.6, ...
                     'jointing_depth', 0.7, ...
                     'insidejointingcircle_length', 1.5, ...
                     'insidejointingcircle_width', 1.16, ...
                     'back_margin', 1, ...
                     'jointing_side_length', 2);

%% FRAMING - FOOT TO HIP joint

Translation_foot_to_ankle = [0 0 ankle_sizes.sole_depth + (ankle_sizes.insidejointingcircle_width/2)];
Rotation_foot_to_ankle = Rotation_f(-90,'x');
Transform_foot_to_ankle = CreateTransform_f(Translation_foot_to_ankle, Rotation_foot_to_ankle);

Translation_ankle_to_knee = [0 -sheen_sizes.sheen_length-(sheen_sizes.length_of_jointing_area_to_knee/2)+sheen_sizes.radius_of_jointing_circle_to_ankle-hip_sizes.radius_of_jointing_circle_to_knee 0];
Rotation_ankle_to_knee = eye(3);
Transform_ankle_to_knee = CreateTransform_f(Translation_ankle_to_knee, Rotation_ankle_to_knee);

Translation_knee_to_hip = [0 -hip_sizes.length-hip_sizes.offset_body_jointing_to_center_of_circle-hip_sizes.radius_of_jointing_circle_to_knee 0];
Rotation_knee_to_hip = eye(3);
Transform_knee_to_hip = CreateTransform_f(Translation_knee_to_hip, Rotation_knee_to_hip);

Transforms = [Transform_foot_to_ankle Transform_ankle_to_knee Transform_knee_to_hip];

%%